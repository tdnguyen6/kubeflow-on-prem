apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubeflow-api-auth
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: kubeflow-api-auth
rules:
  - apiGroups:
      - kubeflow.org
      - serving.kubeflow.org
    resources:
      - notebooks
      - inferenceservices
      - profiles
    verbs: 
      - get
      - list
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubeflow-api-auth
roleRef:
  kind: ClusterRole
  name: kubeflow-api-auth
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: kubeflow-api-auth
---
apiVersion: v1
kind: Service
metadata:
  name: kubeflow-api-auth
  labels:
    app: kubeflow-api-auth
spec:
  ports:
    - name: http
      port: 80
      targetPort: 3002
  selector:
    app: kubeflow-api-auth
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubeflow-api-auth
spec:
  selector:
    matchLabels:
      app: kubeflow-api-auth
  template:
    metadata:
      labels:
        app: kubeflow-api-auth
    spec:
      serviceAccountName: kubeflow-api-auth
      containers:
        - image: cr.tidu.giize.com/kubeflow-api-auth
          imagePullPolicy: Always
          name: kubeflow-api-auth
          ports:
            - containerPort: 3002
        - name: db
          image: postgres
          env:
            - name: POSTGRES_DB
              value: pg
            - name: POSTGRES_USER
              value: pg
            - name: POSTGRES_PASSWORD
              value: pg
          volumeMounts:
            - mountPath: /var/lib/postgresql
              name: db
          imagePullPolicy: IfNotPresent
      volumes:
        # - name: container-registry-config
        #   configMap:
        #     name: kubeflow-notebook-ci
        #     items:
        #       - key: config.yml
        #         path: config.yml
        # - name: container-registry-data
        #   emptyDir: {}
        - name: db
          emptyDir: {}
      # persistentVolumeClaim:
      #   claimName: kubeflow-notebook-ci
      restartPolicy: Always
      imagePullSecrets:
        - name: regcred

---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: kubeflow-api-auth
spec:
  gateways:
    - kubeflow/kubeflow-gateway
  hosts:
    - "*"
  http:
    - match:
        - uri:
            prefix: /api-auth/
      route:
        - destination:
            host: kubeflow-api-auth.auth.svc.cluster.local
            port:
              number: 80
      rewrite:
        uri: /
